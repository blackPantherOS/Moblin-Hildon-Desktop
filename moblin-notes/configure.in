dnl $Id: configure.in.in 24688 2007-01-21 19:04:02Z benny $
dnl
dnl Copyright (c) 2005-2007 Erik Harrison <erikharrison@gxfce.org>
dnl Copyright (c) 2003-2007 Benedikt Meurer <benny@xfce.org>
dnl

dnl ***************************
dnl *** Version information ***
dnl ***************************
m4_define([mp_version_major], [0])
m4_define([mp_version_minor], [1])
m4_define([mp_version_micro], [0])
m4_define([mp_version_build], [0])
m4_define([mp_version_tag], [])
m4_define([mp_version], [mp_version_major().mp_version_minor().mp_version_micro()ifelse(mp_version_tag(), [svn], [mp_version_tag()-mp_version_build()], [mp_version_tag()])])

dnl *******************************************
dnl *** Debugging support for SVN snapshots ***
dnl *******************************************
m4_define([mp_debug_default], [ifelse(mp_version_tag(), [svn], [yes], [minimum])])

dnl ***************************
dnl *** Initialize autoconf ***
dnl ***************************
AC_COPYRIGHT([Copyright (c) 2005-2007
        Erik Harrison <erikharrison@gmail.com>])
AC_INIT([Moblin-notes], [mp_version()], [erikharrison@gmail.com])
AC_PREREQ([2.50])
AC_REVISION([$Id: configure.in.in 24688 2007-01-21 19:04:02Z benny $])

dnl ***************************
dnl *** Initialize automake ***
dnl ***************************
AM_INIT_AUTOMAKE([AC_PACKAGE_TARNAME()], [AC_PACKAGE_VERSION()])
AM_CONFIG_HEADER([config.h])
AM_MAINTAINER_MODE()


dnl ********************************
dnl *** Check for basic programs ***
dnl ********************************
AC_PROG_CC()
AC_PROG_LD()
AC_PROG_LIBTOOL()
AC_PROG_INSTALL()
AC_PROG_INTLTOOL()

dnl ******************************
dnl *** Check for i18n support ***
dnl ******************************
dnl XDT_I18N([be ca cs cy de dz el eo es et eu fi fr gl gu he hu it ja ka ko lt mk nl pa pl pt_BR ru sk sv ta uk zh_CN zh_TW])
dnl Add the languages which your application supports here.
ALL_LINGUAS=""
AM_GLIB_GNU_GETTEXT

dnl ***********************************
dnl *** Check for required packages ***
dnl ***********************************
dnl XDT_CHECK_PACKAGE([LIBXFCEGUI4], [libxfcegui4-1.0], [4.4.0])
PKG_CHECK_MODULES(GTK, [gtk+-2.0 >= 2.6.0])
AC_SUBST(GTK_CFLAGS)
AC_SUBST(GTK_LIBS)

dnl ***********************************
dnl *** Check for hildon packages   ***
dnl ***********************************
PKG_CHECK_MODULES(HILDON, [hildon-1])
AC_SUBST(HILDON_CFLAGS)
AC_SUBST(HILDON_LIBS)

PKG_CHECK_MODULES(HILDON_FM, [hildon-fm-2])
AC_SUBST(HILDON_FM_CFLAGS)
AC_SUBST(HILDON_FM_LIBS)

PKG_CHECK_MODULES(LIBOSSO, [libosso])
AC_SUBST(LIBOSSO_CFLAGS)
AC_SUBST(LIBOSSO_LIBS)

dnl ***********************************
dnl *** Check for moko finger scroll***
dnl ***********************************
PKG_CHECK_MODULES(MOKO, [moko])
AC_SUBST(MOKO_CFLAGS)
AC_SUBST(MOKO_LIBS)

dnl ***********************************
dnl *** Check for debugging support ***
dnl ***********************************
AC_ARG_ENABLE([debug],
AC_HELP_STRING([--enable-debug=@<:@no/minimum/yes/full@:>@], [Turn on debugging @<:@default=mp_debug_default@:>@]),
  [], [enable_debug=mp_debug_default])
AC_MSG_CHECKING([whether to enable debugging support])
if test x"$enable_debug" = x"full" -o x"$enable_debug" = x"yes"; then
  dnl Check whether the compiler accepts the -fno-strict-aliasing
  dnl switch, as certain packages - like Glib - still don't work
  dnl properly with newer compilers.
  save_CFLAGS="$CFLAGS"
  CFLAGS="$CFLAGS -fno-strict-aliasing"
  AC_MSG_CHECKING([whether $CC accepts -fno-strict-aliasing])
  AC_COMPILE_IFELSE(AC_LANG_SOURCE([int x;]), [
    AC_MSG_RESULT([yes])
    PLATFORM_CFLAGS="$PLATFORM_CFLAGS -fno-strict-aliasing"
  ], [
    AC_MSG_RESULT([no])
  ])
  CFLAGS="$save_CFLAGS"

  dnl Make sure we detect possible errors
  PLATFORM_CFLAGS="$PLATFORM_CFLAGS -Wall"

  dnl Paranoia for --enable-debug=full
  if test x"$enable_debug" = x"full"; then
    PLATFORM_CFLAGS="$PLATFORM_CFLAGS -O0 -g3"
    PLATFORM_CPPFLAGS="$PLATFORM_CPPFLAGS -DG_DISABLE_DEPRECATED -DG_ENABLE_DEBUG"
  fi
else
  dnl Disable object cast checks
  PLATFORM_CPPFLAGS="$PLATFORM_CPPFLAGS -DG_DISABLE_CAST_CHECKS"

  dnl Disable all checks for --enable-debug=no
  if test x"$enable_debug" = x"no"; then
    PLATFORM_CPPFLAGS="$PLATFORM_CPPFLAGS -DG_DISABLE_ASSERT -DG_DISABLE_CHECKS"
  fi
fi
AC_MSG_RESULT([$enable_debug])

dnl **************************************
dnl *** Check for linker optimizations ***
dnl **************************************
AC_MSG_CHECKING([whether $LD accepts -O1])
case `$LD -O1 -v 2>&1 </dev/null` in
*GNU* | *'with BFD'*)
  PLATFORM_LDFLAGS="$PLATFORM_LDFLAGS -Wl,-O1"
  AC_MSG_RESULT([yes])
  ;;
*)
  AC_MSG_RESULT([no])
  ;;
esac

dnl *********************************
dnl *** Substitute platform flags ***
dnl *********************************
AC_MSG_CHECKING([PLATFORM_CPPFLAGS])
AC_MSG_RESULT([$PLATFORM_CPPFLAGS])
AC_SUBST([PLATFORM_CPPFLAGS])
AC_MSG_CHECKING([PLATFORM_CFLAGS])
AC_MSG_RESULT([$PLATFORM_CFLAGS])
AC_SUBST([PLATFORM_CFLAGS])
AC_MSG_CHECKING([PLATFORM_LDFLAGS])
AC_MSG_RESULT([$PLATFORM_LDFLAGS])
AC_SUBST([PLATFORM_LDFLAGS])

AC_OUTPUT([
Makefile
po/Makefile.in
src/Makefile
])

