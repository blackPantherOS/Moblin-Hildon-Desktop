<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="EmpathyConf">
<refmeta>
<refentrytitle role="top_of_page">EmpathyConf</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBEMPATHY Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>EmpathyConf</refname>
<refpurpose></refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>



                    <link linkend="EmpathyConf-struct">EmpathyConf</link>;
<link linkend="void">void</link>                (<link linkend="EmpathyConfNotifyFunc">*EmpathyConfNotifyFunc</link>)            (<link linkend="EmpathyConf">EmpathyConf</link> *conf,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="gpointer">gpointer</link> user_data);
<link linkend="EmpathyConf">EmpathyConf</link>*        <link linkend="empathy-conf-get">empathy_conf_get</link>                    (void);
<link linkend="void">void</link>                <link linkend="empathy-conf-shutdown">empathy_conf_shutdown</link>               (void);
<link linkend="guint">guint</link>               <link linkend="empathy-conf-notify-add">empathy_conf_notify_add</link>             (<link linkend="EmpathyConf">EmpathyConf</link> *conf,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="EmpathyConfNotifyFunc">EmpathyConfNotifyFunc</link> func,
                                                         <link linkend="gpointer">gpointer</link> data);
<link linkend="gboolean">gboolean</link>            <link linkend="empathy-conf-notify-remove">empathy_conf_notify_remove</link>          (<link linkend="EmpathyConf">EmpathyConf</link> *conf,
                                                         <link linkend="guint">guint</link> id);
<link linkend="gboolean">gboolean</link>            <link linkend="empathy-conf-set-int">empathy_conf_set_int</link>                (<link linkend="EmpathyConf">EmpathyConf</link> *conf,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="gint">gint</link> value);
<link linkend="gboolean">gboolean</link>            <link linkend="empathy-conf-get-int">empathy_conf_get_int</link>                (<link linkend="EmpathyConf">EmpathyConf</link> *conf,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="gint">gint</link> *value);
<link linkend="gboolean">gboolean</link>            <link linkend="empathy-conf-set-bool">empathy_conf_set_bool</link>               (<link linkend="EmpathyConf">EmpathyConf</link> *conf,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="gboolean">gboolean</link> value);
<link linkend="gboolean">gboolean</link>            <link linkend="empathy-conf-get-bool">empathy_conf_get_bool</link>               (<link linkend="EmpathyConf">EmpathyConf</link> *conf,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="gboolean">gboolean</link> *value);
<link linkend="gboolean">gboolean</link>            <link linkend="empathy-conf-set-string">empathy_conf_set_string</link>             (<link linkend="EmpathyConf">EmpathyConf</link> *conf,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         const <link linkend="gchar">gchar</link> *value);
<link linkend="gboolean">gboolean</link>            <link linkend="empathy-conf-get-string">empathy_conf_get_string</link>             (<link linkend="EmpathyConf">EmpathyConf</link> *conf,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="gchar">gchar</link> **value);
<link linkend="gboolean">gboolean</link>            <link linkend="empathy-conf-set-string-list">empathy_conf_set_string_list</link>        (<link linkend="EmpathyConf">EmpathyConf</link> *conf,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="GSList">GSList</link> *value);
<link linkend="gboolean">gboolean</link>            <link linkend="empathy-conf-get-string-list">empathy_conf_get_string_list</link>        (<link linkend="EmpathyConf">EmpathyConf</link> *conf,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="GSList">GSList</link> **value);

</synopsis>
</refsynopsisdiv>

<refsect1 role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----EmpathyConf
</synopsis>

</refsect1>








<refsect1 role="desc">
<title role="desc.title">Description</title>
<para>

</para>
</refsect1>

<refsect1 role="details">
<title role="details.title">Details</title>
<refsect2>
<title><anchor id="EmpathyConf-struct" role="struct"/>EmpathyConf</title>
<indexterm><primary>EmpathyConf</primary></indexterm><programlisting>typedef struct _EmpathyConf EmpathyConf;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="EmpathyConfNotifyFunc" role="function"/>EmpathyConfNotifyFunc ()</title>
<indexterm><primary>EmpathyConfNotifyFunc</primary></indexterm><programlisting><link linkend="void">void</link>                (*EmpathyConfNotifyFunc)            (<link linkend="EmpathyConf">EmpathyConf</link> *conf,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>conf</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="empathy-conf-get" role="function"/>empathy_conf_get ()</title>
<indexterm><primary>empathy_conf_get</primary></indexterm><programlisting><link linkend="EmpathyConf">EmpathyConf</link>*        empathy_conf_get                    (void);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="empathy-conf-shutdown" role="function"/>empathy_conf_shutdown ()</title>
<indexterm><primary>empathy_conf_shutdown</primary></indexterm><programlisting><link linkend="void">void</link>                empathy_conf_shutdown               (void);</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="empathy-conf-notify-add" role="function"/>empathy_conf_notify_add ()</title>
<indexterm><primary>empathy_conf_notify_add</primary></indexterm><programlisting><link linkend="guint">guint</link>               empathy_conf_notify_add             (<link linkend="EmpathyConf">EmpathyConf</link> *conf,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="EmpathyConfNotifyFunc">EmpathyConfNotifyFunc</link> func,
                                                         <link linkend="gpointer">gpointer</link> data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>conf</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>func</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="empathy-conf-notify-remove" role="function"/>empathy_conf_notify_remove ()</title>
<indexterm><primary>empathy_conf_notify_remove</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            empathy_conf_notify_remove          (<link linkend="EmpathyConf">EmpathyConf</link> *conf,
                                                         <link linkend="guint">guint</link> id);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>conf</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="empathy-conf-set-int" role="function"/>empathy_conf_set_int ()</title>
<indexterm><primary>empathy_conf_set_int</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            empathy_conf_set_int                (<link linkend="EmpathyConf">EmpathyConf</link> *conf,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="gint">gint</link> value);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>conf</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="empathy-conf-get-int" role="function"/>empathy_conf_get_int ()</title>
<indexterm><primary>empathy_conf_get_int</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            empathy_conf_get_int                (<link linkend="EmpathyConf">EmpathyConf</link> *conf,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="gint">gint</link> *value);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>conf</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="empathy-conf-set-bool" role="function"/>empathy_conf_set_bool ()</title>
<indexterm><primary>empathy_conf_set_bool</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            empathy_conf_set_bool               (<link linkend="EmpathyConf">EmpathyConf</link> *conf,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="gboolean">gboolean</link> value);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>conf</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="empathy-conf-get-bool" role="function"/>empathy_conf_get_bool ()</title>
<indexterm><primary>empathy_conf_get_bool</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            empathy_conf_get_bool               (<link linkend="EmpathyConf">EmpathyConf</link> *conf,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="gboolean">gboolean</link> *value);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>conf</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="empathy-conf-set-string" role="function"/>empathy_conf_set_string ()</title>
<indexterm><primary>empathy_conf_set_string</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            empathy_conf_set_string             (<link linkend="EmpathyConf">EmpathyConf</link> *conf,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         const <link linkend="gchar">gchar</link> *value);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>conf</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="empathy-conf-get-string" role="function"/>empathy_conf_get_string ()</title>
<indexterm><primary>empathy_conf_get_string</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            empathy_conf_get_string             (<link linkend="EmpathyConf">EmpathyConf</link> *conf,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="gchar">gchar</link> **value);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>conf</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="empathy-conf-set-string-list" role="function"/>empathy_conf_set_string_list ()</title>
<indexterm><primary>empathy_conf_set_string_list</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            empathy_conf_set_string_list        (<link linkend="EmpathyConf">EmpathyConf</link> *conf,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="GSList">GSList</link> *value);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>conf</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="empathy-conf-get-string-list" role="function"/>empathy_conf_get_string_list ()</title>
<indexterm><primary>empathy_conf_get_string_list</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            empathy_conf_get_string_list        (<link linkend="EmpathyConf">EmpathyConf</link> *conf,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="GSList">GSList</link> **value);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>conf</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
