#!/bin/sh -e
# This script can be called in the following ways:
#
# After the package was removed:
#	<postrm> remove
#
# After the package was purged:
#	<postrm> purge
#
# After the package was upgraded:
#	<old-postrm> upgrade <new-version>
# if that fails:
#	<new-postrm> failed-upgrade <old-version>
#
#
# After all of the packages files have been replaced:
#	<postrm> disappear <overwriting-package> <version>
#
#
# If preinst fails during install:
#	<new-postrm> abort-install
#
# If preinst fails during upgrade of removed package:
#	<new-postrm> abort-install <old-version>
#
# If preinst fails during upgrade:
#	<new-postrm> abort-upgrade <old-version>


# Undo removal of a no-longer used conffile
undo_rm_conffile()
{
    CONFFILE="$1"

    if [ ! -e "$CONFFILE" ]; then
	if [ -e "$CONFFILE".dpkg-bak ]; then
	    echo "Restoring modified conffile $CONFFILE"
	    mv -f "$CONFFILE".dpkg-bak "$CONFFILE"
	elif [ -e "$CONFFILE".dpkg-obsolete ]; then
	    mv -f "$CONFFILE".dpkg-obsolete "$CONFFILE"
	fi
    fi
}

# Finish removal of a no-longer used conffile
finish_rm_conffile()
{
    CONFFILE="$1"

    if [ -e "$CONFFILE".dpkg-bak ]; then
	rm -f "$CONFFILE".dpkg-bak
    fi
}

# Undo move of a conffile
undo_mv_conffile()
{
    CONFFILE="$1"

    if [ ! -e "$CONFFILE" ]; then
	if [ -e "$CONFFILE".dpkg-bak ]; then
	    mv -f "$CONFFILE".dpkg-bak "$CONFFILE"
	elif [ -e "$CONFFILE".dpkg-moving ]; then
	    mv -f "$CONFFILE".dpkg-moving "$CONFFILE"
	fi
    fi
}

# Finish move of a conffile
finish_mv_conffile()
{
    CONFFILE="$1"

    if [ -e "$CONFFILE".dpkg-bak ]; then
	rm -f "$CONFFILE".dpkg-bak
    fi
}


# Undo rename of the persistent-disk.rules file
undo_mv_persistent_disk_rules()
{
    undo_mv_conffile /etc/udev/rules.d/65-persistent-disk.rules
}

# Finish rename of the persistent-disk.rules file
finish_mv_persistent_disk_rules()
{
    finish_mv_conffile /etc/udev/rules.d/65-persistent-disk.rules
}


# Undo rename the cdrom_id.rules file
undo_mv_cdrom_id_rules()
{
    undo_mv_conffile /etc/udev/rules.d/50-cdrom_id.rules \
	            /etc/udev/rules.d/30-cdrom_id.rules
}

# Finish rename the cdrom_id.rules file
finish_mv_cdrom_id_rules()
{
    finish_mv_conffile /etc/udev/rules.d/50-cdrom_id.rules \
	               /etc/udev/rules.d/30-cdrom_id.rules
}


# Undo remove the iftab.rules file
undo_rm_iftab_rules()
{
    undo_rm_conffile /etc/udev/rules.d/25-iftab.rules
}

# Finish remove of the iftab.rules file
finish_rm_iftab_rules()
{
    finish_rm_conffile /etc/udev/rules.d/25-iftab.rules
}


# Remove configuration and log files
purge_files()
{
    if [ -f /etc/iftab ]; then
	rm -f /etc/iftab || true
    fi

    if [ -f /var/log/udev ]; then
	rm -f /var/log/udev || true
    fi
}


case "$1" in
    remove)
	;;

    purge)
    	finish_mv_persistent_disk_rules
	finish_mv_cdrom_id_rules
	finish_rm_iftab_rules
	purge_files
	;;

    upgrade|failed-upgrade|disappear)
	;;

    abort-install|abort-upgrade)
	# Abort upgrade from dapper
	if dpkg --compare-versions "$2" lt "093-0ubuntu1"; then
	    undo_mv_persistent_disk_rules
	fi

	# Abort upgrade within feisty development cycle
	if dpkg --compare-versions "$2" lt "108-0ubuntu1"; then
	    undo_mv_cdrom_id_rules
	fi

	# Abort upgrade from feisty
	if dpkg --compare-versions "$2" lt "111-0ubuntu1"; then
	    undo_rm_iftab_rules
	fi
	;;

    *)
	echo "$0 called with unknown argument \`$1'" 1>&2
	exit 1
	;;
esac

#DEBHELPER#
exit 0
