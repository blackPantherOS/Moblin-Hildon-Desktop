diff -ruNp udev-103~/extras/pnp_modules/Makefile udev-103/extras/pnp_modules/Makefile
--- udev-103~/extras/pnp_modules/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ udev-103/extras/pnp_modules/Makefile	2006-11-02 12:57:44.000000000 +0000
@@ -0,0 +1,67 @@
+# Copyright © 2005 Canonical Ltd.
+# Author: Scott James Remnant <scott@ubuntu.com>
+#
+# Released under the GNU General Public License, version 2.
+
+PROG = pnp_modules
+OBJ =
+HEADERS =
+GEN_HEADERS =
+MAN_PAGES =
+
+prefix =
+etcdir =	${prefix}/etc
+sbindir =	${prefix}/sbin
+usrbindir =	${prefix}/usr/bin
+usrsbindir =	${prefix}/usr/sbin
+libudevdir =	${prefix}/lib/udev
+mandir =	${prefix}/usr/share/man
+configdir =	${etcdir}/udev/
+
+INSTALL = /usr/bin/install -c
+INSTALL_PROGRAM = ${INSTALL}
+INSTALL_DATA  = ${INSTALL} -m 644
+INSTALL_SCRIPT = ${INSTALL_PROGRAM}
+
+all: $(PROG) $(MAN_PAGES)
+.PHONY: all
+.DEFAULT: all
+
+%.o: %.c $(GEN_HEADERS)
+	$(E) "  CC      " $@
+	$(Q) $(CC) -c $(CFLAGS) $< -o $@
+
+$(PROG): %: $(HEADERS) %.o $(OBJS)
+	$(E) "  LD      " $@
+	$(Q) $(LD) $(LDFLAGS) $@.o $(OBJS) -o $@ $(LIBUDEV) $(LIB_OBJS)
+
+# man pages
+%.8: %.xml
+	$(E) "  XMLTO   " $@
+	$(Q) xmlto man $?
+.PRECIOUS: %.8
+
+clean:
+	$(E) "  CLEAN   "
+	$(Q) rm -f $(PROG) $(OBJS) $(GEN_HEADERS)
+.PHONY: clean
+
+install-bin: all
+	$(INSTALL_PROGRAM) -D $(PROG) $(DESTDIR)$(libudevdir)/$(PROG)
+.PHONY: install-bin
+
+uninstall-bin:
+	- rm $(DESTDIR)$(libudevdir)/$(PROG)
+.PHONY: uninstall-bin
+
+install-man:
+	$(INSTALL_DATA) -D $(PROG).8 $(DESTDIR)$(mandir)/man8/$(PROG).8
+.PHONY: uninstall-man
+
+uninstall-man:
+	-rm -f $(DESTDIR)$(mandir)/man8/$(PROG).8
+.PHONY: uninstall-man
+
+install-config:
+	@echo "no config file to install"
+.PHONY: install-config
diff -ruNp udev-103~/extras/pnp_modules/pnp_modules.8 udev-103/extras/pnp_modules/pnp_modules.8
--- udev-103~/extras/pnp_modules/pnp_modules.8	1970-01-01 01:00:00.000000000 +0100
+++ udev-103/extras/pnp_modules/pnp_modules.8	2006-11-02 12:57:44.000000000 +0000
@@ -0,0 +1,22 @@
+.TH PNP_MODULES 8 "November 2005" "" "Linux Administrator's Manual"
+.SH NAME
+pnp_modules \- udev callout to list modules for PNP devices
+.SH SYNOPSIS
+.BI pnp_modules
+\fIdevpath\fP
+.SH DESCRIPTION
+.B ide_media
+is normally called from a udev PROGRAM rule to list aliases that can be
+used to load modules for PNP devices.
+.SH USAGE
+.B pnp_modules
+takes a single argument which should be a path under /sys, if not given
+it uses the value of the
+.I DEVPATH
+environment variable instead.  Outputs a list of modprobe aliases that
+can be used to load modules, e.g. with a RUN rule.
+.RE
+.SH SEE ALSO
+.BR udev (8)
+.SH AUTHORS
+Scott James Remnant <scott@ubuntu.com>
diff -ruNp udev-103~/extras/pnp_modules/pnp_modules.c udev-103/extras/pnp_modules/pnp_modules.c
--- udev-103~/extras/pnp_modules/pnp_modules.c	1970-01-01 01:00:00.000000000 +0100
+++ udev-103/extras/pnp_modules/pnp_modules.c	2006-11-02 12:57:44.000000000 +0000
@@ -0,0 +1,109 @@
+/*
+ * pnp_modules - list modules for PNP devices
+ *
+ * Copyright © 2006 Canonical Ltd.
+ * Author: Scott James Remnant <scott@ubuntu.com>
+ *
+ *	This program is free software; you can redistribute it and/or modify it
+ *	under the terms of the GNU General Public License as published by the
+ *	Free Software Foundation version 2 of the License.
+ *
+ *	This program is distributed in the hope that it will be useful, but
+ *	WITHOUT ANY WARRANTY; without even the implied warranty of
+ *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ *	General Public License for more details.
+ *
+ *	You should have received a copy of the GNU General Public License along
+ *	with this program; if not, write to the Free Software Foundation, Inc.,
+ *	51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+ *
+ */
+
+#include <sys/types.h>
+#include <sys/stat.h>
+
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <unistd.h>
+#include <errno.h>
+#include <fcntl.h>
+
+#include "../../udev.h"
+
+#ifdef USE_LOG
+void log_message(int priority, const char *format, ...)
+{
+	va_list args;
+	static int udev_log = -1;
+
+	if (udev_log == -1) {
+		const char *value;
+
+		value = getenv("UDEV_LOG");
+		if (value)
+			udev_log = log_priority(value);
+		else
+			udev_log = LOG_ERR;
+	}
+
+	if (priority > udev_log)
+		return;
+
+	va_start(args, format);
+	vsyslog(priority, format, args);
+	va_end(args);
+}
+#endif
+
+int main(int argc, char *argv[])
+{
+	struct stat statbuf;
+	const char *devpath;
+	char filename[PATH_SIZE], line[256];
+	FILE *fp;
+	int ret = 0;
+
+	logging_init("pnp_modules");
+	sysfs_init();
+
+	if (argc > 1) {
+		devpath = argv[1];
+	} else {
+		devpath = getenv("DEVPATH");
+		if (!devpath) {
+			err("no devpath specified and DEVPATH not set");
+			ret = 1;
+			goto exit;
+		}
+	}
+
+	strlcpy(filename, sysfs_path, sizeof(filename));
+	strlcat(filename, devpath, sizeof(filename));
+
+	if (stat(filename, &statbuf) != 0) {
+		err("stat of '%s' failed", filename);
+		ret = 1;
+		goto exit;
+	}
+
+	strlcat(filename, "/", sizeof(filename));
+	strlcat(filename, "id", sizeof(filename));
+
+	fp = fopen(filename, "r");
+	if (!fp) {
+		err("can't open '%s': %s", filename, strerror(errno));
+		ret = 1;
+		goto exit;
+	}
+
+	while (fgets(line, sizeof(line), fp)) {
+		remove_trailing_chars(line, '\n');
+		printf("pnp:d%s\n", line);
+	}
+
+	fclose(fp);
+exit:
+	logging_close();
+	return ret;
+}
